{
    "summary": "AutoRT is an open-source, scalable robotic orchestration system using Swarms and RT-1. It provides customizable task ranking, robot models, and a flexible AI interface for diverse applications.",
    "details": [
        {
            "comment": "This code is a README for the AutoRT project, which aims to implement a multi-agent system for large-scale orchestration of robotic agents. It uses Swarms and RT-1 as the action model. The README provides information on how to install and set up the AutoRT. It mentions loading environment variables and instantiating the AutoRT class with API keys.",
            "location": "\"/media/root/Prima/works/AutoRT/docs/src/README.md\":0-32",
            "content": "[![Multi-Modality](agorabanner.png)](https://discord.gg/qUtxnK2NMf)\n# AutoRT\n![AutoRTImage](autort.png)\nImplementation of AutoRT: \"AutoRT: Embodied Foundation Models for Large Scale Orchestration of Robotic Agents\". This repo will implement the multi agent system that transforms a scene into a list of ranked and priortized tasks for an robotic action model to execute. This is an very effective setup that I personally believe is the future for swarming robotic foundation models!\nThis project will be implemented using Swarms, for the various llms and use the official RT-1 as the robotic action model.\n[PAPER LINK](https://auto-rt.github.io/static/pdf/AutoRT.pdf)\n## Install\n`$ pip3 install autort-swarms`\n## Usage\n### Setting Up AutoRT\n1. Load your environment variables:\n```python\nfrom dotenv import load_dotenv\nload_dotenv()\n```\n2. Instantiate the AutoRT class:\n```python\nfrom autort import AutoRT\n# Load API keys from environment\nopenai_api_key = os.getenv(\"OPENAI_API_KEY\")\ngemini_api_key = os.getenv(\"GEMINI_API_KEY\")"
        },
        {
            "comment": "Instantiate AutoRT with necessary API keys.",
            "location": "\"/media/root/Prima/works/AutoRT/docs/src/README.md\":34-70",
            "content": "# Instantiate AutoRT with the necessary API keys\nautort_system = AutoRT(openai_api_key)\n```\n### Running AutoRT\nWith AutoRT set up, you can now run the system by providing it with text and image inputs:\n```python\ntext_input = \"There is a bottle on the table.\"\nimage_url = \"https://i.imgur.com/2qY9f8U.png\"\n# Run the AutoRT system\nresult = autort_system.run(text_input, image_url)\n```\n### Customizing AutoRT\nAutoRT allows for extensive customization of its components. Here\u2019s how you can do it:\n#### Customizing Language Model Prompts\nAutoRT uses predefined prompts to guide the language models. To customize these prompts:\n```python\nfrom autort.prompts import FUSED_SYSTEM_PROMPT_WITH_SOP\ncustom_visualization_prompt = \"Custom SOP for visualizing objects.\"\nautort_system.system_prompt_vllm = FUSED_SYSTEM_PROMPT_WITH_SOP(\n    guidance=autort_system.guidance_vllm,\n    sop=custom_visualization_prompt,\n)\n```\n#### Customizing Task Generation\nYou can alter the guidance for task generation to focus on specific types of tasks:\n```python"
        },
        {
            "comment": "Customizes task ranking, robot model for AutoRT; run customized system with new parameters. Offers flexible, powerful interface for AI-robot interaction.",
            "location": "\"/media/root/Prima/works/AutoRT/docs/src/README.md\":71-103",
            "content": "custom_task_generation_guidance = \"Generate cleaning tasks for the robot.\"\nautort_system.guidance_llm = custom_task_generation_guidance\n```\n#### Customizing Task Ranking\nTo modify the criteria for task ranking:\n```python\ncustom_ranking_guidance = \"Rank tasks based on safety and duration.\"\nautort_system.guidance_rank = custom_ranking_guidance\n```\n#### Customizing the Robot Model\nAutoRT can be tailored to work with different robot models by providing a custom callable:\n```python\ndef custom_robot_model(task_descriptions, image):\n    # Custom logic to execute tasks\n    pass\nautort_system.robot_model = custom_robot_model\n```\n### Running Customized AutoRT\nAfter customization, invoke the `run` method with the new parameters:\n```python\n# Run the customized AutoRT system\ncustom_result = autort_system.run(text_input, image_url)\n```\n### Conclusion\nAutoRT offers a flexible and powerful interface to bridge the gap between AI language understanding and robotic task execution. By customizing its components, you can tailor t"
        },
        {
            "comment": "This code snippet is a README file that introduces AutoRT, an open-source system for orchestrating robotic agents. It explains how the system can be applied to various applications and provides instructions on how to implement and customize it for specific needs. The citation block gives credit to the original research paper, while the license indicates that the code is licensed under MIT.",
            "location": "\"/media/root/Prima/works/AutoRT/docs/src/README.md\":103-122",
            "content": "he system to a wide range of applications, from domestic robots to industrial automation systems. With this tutorial, you're now equipped to implement and customize AutoRT for your specific needs.\n## Citation\n```bibtext\n@inproceedings{\n    anonymous2023autort,\n    title={Auto{RT}: Embodied Foundation Models for Large Scale Orchestration of Robotic Agents},\n    author={Anonymous},\n    booktitle={Submitted to The Twelfth International Conference on Learning Representations},\n    year={2023},\n    url={https://openreview.net/forum?id=xVlcbh0poD},\n    note={under review}\n}\n```\n# License\nMIT"
        }
    ]
}